    <style>
            html, body {
              width:  100%;
              height: 100%;
              margin: 0px;
            }
            canvas:active, canvas:focus {
                cursor:pointer;
            }
            #canvasContainer {
                position:relative;
            }
            #imageCanvas {
                position:absolute;
                top:0px;
                left:0px;
                border: 2px solid #9C9898;
            }
            #myCanvas {
                position:absolute;
                top:0px;
                left:0px;
                border: 2px solid #9C9898;
            }
    </style>
<div class="row-fluid">
<div class="span2">


<p>
    <div>
        <a class="btn btn-primary btn-large" data-toggle="modal" href="#postModal" > 
        <i class="icon-share icon-white"></i>
            Post to Facebook
        </a>
    </div>
</p>
<p>
    <button class="btn btn-success btn-large" data-loading-text="Preparing Image..."  id="downloadImage">
        <i class="icon-download-alt icon-white"></i>
        Download Image
    </button>
</p>
<p>
    <div><a class="btn btn-large" data-toggle="modal" href="#loadModal" >Load Remote Image</a></div>
</p>

<div class="modal hide fade" id="loadModal">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal">×</button>
    <h2>Load a Remote Image</h2>
  </div>
  <div class="modal-body">
    <p>
    <label>Image URL</label>
     <input type="text" id="url"  class="span4" placeholder="Remote Image URL...">
   </p>
  </div>
  <div class="modal-footer">
    <a href="#" class="btn" data-dismiss="modal">Close</a>
    <a href="#" id="fetchImage" class="btn btn-primary">Load Image</a>
  </div>
</div>


<div class="modal hide fade" id="postModal">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">×</button>
        <h2>Post to Facebook</h2>
      </div>
      <div class="modal-body">
        <p>
            <form id="uploadForm" action="/upload" method="POST">
                <input type="hidden" name="user" id="userId"/>
                <label>Message</label>
                <textarea class="input-xlarge" name="messageText" id="messageText"></textarea>
                <div class="btn-group">
                  <a class="btn btn-primary btn-large dropdown-toggle" data-toggle="dropdown" href="#">
                    <i class="icon-share icon-white"></i>
                    Post to Facebook
                    <span class="caret"></span>
                  </a>
                  <ul class="dropdown-menu">
                    <a href="#">Post to My Wall</a>
                    <a href="#">Post to User's Wall</a>
                    <hr/>
                    <a id="postImage" href="#">Upload Only</a>
                  </ul>
               </div>
                <input type="hidden" name="dataUrl" id="dataUrlUpload"/>
            </form>
        </p>
      </div>
      <div class="modal-footer">
        <a href="#" class="btn" data-dismiss="modal">Close</a>
      </div>
</div>

<form id="downloadForm" action="/download" method="POST">
    <input type="hidden" name="dataUrl" id="dataUrl"/>
</form>
</div>
<div class="span10">
        
        <div id="canvasContainer">
            <canvas id="imageCanvas" style="z-index:1;"></canvas>
            <canvas id="myCanvas" style="z-index:2;"></canvas>
            <canvas id="destinationCanvas" style="z-index:3;visibility: hidden; "></canvas>
        </div>
</div>

  <script type="text/javascript" src="/scripts/spin.min.js"></script>
  <script type="text/javascript">
    $(document).ready(function() {
        initDrawingCanvas();
        $("#canvasContainer").spin();

        drawImage("<%= req.params.url %>", function() {});

        $("#fetchImage").on('click', function() {
            var url = $("#url").val();
            var _self = this;
            if(url&&url.trim()!="") {
                 $(_self).button('loading');
                drawImage(url, function(success) {
                    $(_self).button('reset');
                    $('#loadModal').modal('hide');
                });
            } else {
                $('#loadModal').modal('hide');
            }
        });

        $("#postImage").on('click',function() {
            $("#canvasContainer").spin();
            $(this).button('loading');
            var data = getImageDataUrl("image/png");
            $('#dataUrlUpload').val(data);
            $("#canvasContainer").spin(false);
            $(this).button('reset');
            $('#uploadForm').submit();
        });

        $("#downloadImage").on('click',function() {
            $(this).button('loading');
            $("#canvasContainer").spin();
            var data = getImageDataUrl("image/png");
            $('#dataUrl').val(data);
            $("#canvasContainer").spin(false);
            $(this).button('reset');
            $('#downloadForm').submit();
        });

        $("canvas").on('selectstart',function() {
            return false;
        })
    });

    function getImageDataUrl(type) {
        var destCanvas = document.getElementById("destinationCanvas");
        var destCtx = destCanvas.getContext('2d');

        var canvas1 = document.getElementById("imageCanvas");
        var canvas2 = document.getElementById("myCanvas");
        destCanvas.width  = canvas2.width;
        destCanvas.height = canvas2.height;
        destCtx.drawImage(canvas1,0,0);
        destCtx.drawImage(canvas2,0,0);
        return destCanvas.toDataURL(type);
    }

    function drawImage(url,cb) {
        var imageObj = new Image();
        var canvas = document.getElementById("imageCanvas");
        $("#canvasContainer").css('width',canvas.width);
        $("#canvasContainer").css('height',canvas.height);
        $("#canvasContainer").spin();

        imageObj.onload = function() {
          canvas.width  = this.width;
          canvas.height = this.height;
          var context = canvas.getContext("2d");
          initDrawingCanvas(this.width,this.height);
          context.drawImage(imageObj, 0, 0);
          $("#canvasContainer").css('width',canvas.width);
          $("#canvasContainer").css('height',canvas.height);
          $("#canvasContainer").spin(false);
          cb(true);
        };

        imageObj.onerror =  function() {
            $("#canvasContainer").spin(false);
            cb(false);
        };
        imageObj.src = "/image/" + encodeURIComponent(url);
    }
    function postImage() {

    }

    //Drawing Code
    function initDrawingCanvas(width, height) {
        var canvas = document.getElementById("myCanvas");
        var context = canvas.getContext("2d");
        canvas.width  = width;
        canvas.height = height;
    }
    $('#myCanvas').mousedown(function(e){
        var offset = $(this).offset();
        var mouseX = e.pageX - offset.left;
        var mouseY = e.pageY - offset.top;

        paint = true;
        addClick(mouseX, mouseY);
        redraw();
    });

    $('#myCanvas').mousemove(function(e){
        if(paint){
            var offset = $(this).offset();
            var mouseX = e.pageX - offset.left;
            var mouseY = e.pageY - offset.top;
            addClick(mouseX, mouseY, true);
            redraw();
        }
    });

    $('#myCanvas').mouseup(function(e){
        paint = false;
    });

    $('#myCanvas').mouseleave(function(e){
        paint = false;
    });

    var clickX = new Array();
    var clickY = new Array();
    var clickDrag = new Array();
    var paint;

    function addClick(x, y, dragging)
    {
        clickX.push(x);
        clickY.push(y);
        clickDrag.push(dragging);
    }

function redraw(){
  var canvas = document.getElementById("myCanvas");
  var context = canvas.getContext("2d");
  canvas.width = canvas.width; // Clears the canvas

  context.strokeStyle = "#df4b26";
  context.lineJoin = "round";
  context.lineWidth = 5;

  for(var i=0; i < clickX.length; i++)
  {
    context.beginPath();
    if(clickDrag[i] && i){
      context.moveTo(clickX[i-1], clickY[i-1]);
     }else{
       context.moveTo(clickX[i]-1, clickY[i]);
     }
     context.lineTo(clickX[i], clickY[i]);
     context.closePath();
     context.stroke();
  }
}
</script>
