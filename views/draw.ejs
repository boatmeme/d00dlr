<!DOCTYPE HTML>
<html>
  <head>
    <style>
		html, body {
		  width:  100%;
		  height: 100%;
		  margin: 0px;
		}
		#canvasContainer {
			position:relative;
		}
		#imageCanvas {
			position:absolute;
			border: 1px solid #9C9898;
		}
		#myCanvas {
			position:absolute;
			border: 1px solid #9C9898;
		}
	</style>
  </head>
  <body>
  	<div id="container">
  		<div><input type="text" id="url"><button id="fetchImage">Fetch Image</button></div>
  		<div><button id="postImage">Post Image</button><button id="downloadImage">Download Image</button></div>
  		<div id="canvasContainer">
  			<canvas id="imageCanvas" style="z-index:1;"></canvas>
    		<canvas id="myCanvas" style="z-index:2;"></canvas>
            <canvas id="destinationCanvas" style="z-index:3;visibility: hidden; "></canvas>
    	</div>
    </div>
  </body>
  <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>
  <script type="text/javascript">
    $(document).ready(function() {
    	initDrawingCanvas();
		drawImage("https://fbcdn-profile-a.akamaihd.net/hprofile-ak-snc4/173102_100000875761191_1026657791_n.jpg");
		$("#fetchImage").on('click', function() {
			var url = $("#url").val();
			if(url&&url.trim()!="") {
				drawImage(url);
			}
		});
		$("#postImage").on('click',function() {
			var data = getImageDataUrl("image/png");
			console.log(data);
		});
        $("#downloadImage").on('click',function() {
			var data = getImageDataUrl("image/png");
            var downloadUrl = document.location.hostname + "/download/" + encodeURIComponent(data);
            console.log(downloadUrl);
            document.location.href = downloadUrl;
		});
    });

    function getImageDataUrl(type) {
        var destCanvas = document.getElementById("destinationCanvas");
        destCanvas.width  = window.innerWidth-50;
    	destCanvas.height = window.innerHeight-50;
        var destCtx = destCanvas.getContext('2d');

        var canvas1 = document.getElementById("imageCanvas");
        var canvas2 = document.getElementById("myCanvas");
        destCtx.drawImage(canvas1,0,0);
        destCtx.drawImage(canvas2,0,0);
        return destCanvas.toDataURL(type);
    }

    function drawImage(url) {
    	var canvas = document.getElementById("imageCanvas");
		var context = canvas.getContext("2d");
		canvas.width  = window.innerWidth-50;
		canvas.height = window.innerHeight-50;
		var imageObj = new Image();

		imageObj.onload = function() {
		  context.drawImage(imageObj, 69, 50);
		};
        imageObj.src = "/image/" + encodeURIComponent(url);
    }
    function postImage() {

    }

    //Drawing Code
    function initDrawingCanvas() {
    	var canvas = document.getElementById("myCanvas");
		var context = canvas.getContext("2d");
		canvas.width  = window.innerWidth-50;
		canvas.height = window.innerHeight-50;
    }
    $('#myCanvas').mousedown(function(e){
  		var mouseX = e.pageX - this.offsetLeft;
  		var mouseY = e.pageY - this.offsetTop;

  		paint = true;
  		addClick(e.pageX - this.offsetLeft, e.pageY - this.offsetTop);
  		redraw();
	});

	$('#myCanvas').mousemove(function(e){
  		if(paint){
    		addClick(e.pageX - this.offsetLeft, e.pageY - this.offsetTop, true);
    		redraw();
  		}
	});

	$('#myCanvas').mouseup(function(e){
  		paint = false;
	});

	$('#myCanvas').mouseleave(function(e){
  		paint = false;
	});

	var clickX = new Array();
	var clickY = new Array();
	var clickDrag = new Array();
	var paint;

	function addClick(x, y, dragging)
	{
 	 	clickX.push(x);
  		clickY.push(y);
  		clickDrag.push(dragging);
	}

function redraw(){
  var canvas = document.getElementById("myCanvas");
  var context = canvas.getContext("2d");
  canvas.width = canvas.width; // Clears the canvas

  context.strokeStyle = "#df4b26";
  context.lineJoin = "round";
  context.lineWidth = 5;

  for(var i=0; i < clickX.length; i++)
  {
    context.beginPath();
    if(clickDrag[i] && i){
      context.moveTo(clickX[i-1], clickY[i-1]);
     }else{
       context.moveTo(clickX[i]-1, clickY[i]);
     }
     context.lineTo(clickX[i], clickY[i]);
     context.closePath();
     context.stroke();
  }
}
</script>
</html>
